# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: raidrin
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: sumelu
# "service" is the name of this project. This will also be added to your AWS resource names.
service: sumelu

provider:
  name: aws
  runtime: nodejs20.x
  environment:
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
  stage: ${opt:stage, 'dev'}
  region: ca-central-1

functions:
  home:
    handler: handler.home
    events:
      - http:
          path: /
          method: get
  globalLearn:
    handler: handler.globalLearn
    events:
      - http:
          path: /global/learn/{term}
          method: get
    timeout: 25
  globalDomains:
    handler: handler.globalDomains
    events:
      - http:
          path: /global/domains
          method: get

resources:
  Resources:
    TermsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: term
            AttributeType: S
          - AttributeName: user
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: term
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserIndex
            KeySchema:
              - AttributeName: user
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        TableName: ${self:service}-termsTable-${sls:stage}

    DomainsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: domain
            AttributeType: S
          - AttributeName: user
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: domain
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserIndex
            KeySchema:
              - AttributeName: user
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        TableName: ${self:service}-domainsTable-${sls:stage}

custom:
  customDomain:
    domainName: ${self:provider.stage}-api.sumelu.com
    stage: ${self:provider.stage}
    createRoute53Record: true
    certificateName: sumelu.com # Generated on ACM

plugins:
  - serverless-domain-manager
# POST    /global/learn/${term}
# GET     /global/domains

# POST    /learn/${term}
# GET     /terms/domains
# GET     /terms
# GET     /terms/term/${id}
# DELETE  /terms/term/${id}
